[{"/Users/benjamin/CoVent/client/src/components/ProfilePage/profilePage.tsx":"1","/Users/benjamin/CoVent/client/src/utils/firebase.ts":"2","/Users/benjamin/CoVent/client/src/index.tsx":"3","/Users/benjamin/CoVent/client/src/components/Swiping/swiping.tsx":"4","/Users/benjamin/CoVent/client/src/components/landingPage/landingPage.tsx":"5"},{"size":23027,"mtime":1607613448462,"results":"6","hashOfConfig":"7"},{"size":718,"mtime":1607613465301,"results":"8","hashOfConfig":"7"},{"size":560,"mtime":1607178671760,"results":"9","hashOfConfig":"7"},{"size":1465,"mtime":1607597824472,"results":"10","hashOfConfig":"7"},{"size":3215,"mtime":1607375981088,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1f1vmr5",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/benjamin/CoVent/client/src/components/ProfilePage/profilePage.tsx",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"import React from 'react';\nimport { FormEvent, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from '../../types/combinedStoreTypes';\nimport { User } from \"../../types/userTypes\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { profileUpdate, addCityToProfile, addCategoryToProfile } from '../../utils/systemFunction';\nimport { ProfileNew, CityAdd } from \"../../types/userLucasTypes\";\nimport './profilePage.css';\nimport { Link } from 'react-router-dom';\nimport { getAllProfiles } from './../../utils/userDatabaseFetch';\nimport { addLike } from './../../utils/systemFunction';\nimport { setUser } from '../../redux/userState/userActions';\nimport { setDirection } from '../../redux/directionState/directionActions';\n\nexport const ProfilePage = () => {\n\n  console.log('INSIDE PROFILE-->');\n  const user = useSelector((state: RootState) => state.user)\n  const currentDirection = useSelector((state: RootState) => state.direction)\n  const dispatch = useDispatch();\n\n  const initialState = {\n    picture: '',\n    description: '',\n    age: '',\n    gender: '',\n    location: '',\n  }\n\n  const initialStateCity: CityAdd = {\n    profileId: 0,\n    name: ''\n  }\n\n\n  const categories = [\n    'Athletics',\n    'Ball Sports',\n    'Beach Sports',\n    'Body & Mind',\n    'Cars',\n    'City',\n    'Climbing',\n    'Combat Sports',\n    'Cycling',\n    'Dancing',\n    'Equestrianism',\n    'Fitness',\n    'For Fun',\n    'Games',\n    'Hiking',\n    'Ice',\n    'Motorcycles',\n    'Multi-Sport',\n    'Nature',\n    'Party',\n    'Photography',\n    'Piloting',\n    'Pool',\n    'Racket Sports',\n    'Rowing',\n    'Shooting',\n    'Sky',\n    'Slacklining',\n    'Snow',\n    'Strength',\n    'Traveling',\n    'Underwater',\n    'Water',\n    'Wind'\n  ]\n\n  const [show, setShow] = useState(false);\n  const [showCityModal, setShowCityModal] = useState(false);\n  const [picture, setPicture] = useState('')\n  const [description, setDescription] = useState('')\n  const [age, setAge] = useState('')\n  const [gender, setGender] = useState('')\n  const [location, setLocation] = useState('')\n  const [city, setCity] = useState('');\n  const [category, setCategory] = useState('');\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n\n  const [receivedLikes, setReceivedLikes] = useState<any>([]);\n  const [likedProfiles, setLikedProfiles] = useState<any>([]);\n  const [matches, setMatches] = useState<any>([]);\n  const [profiles, setProfiles] = useState<ProfileNew[]>([]);\n\n\n  useEffect(() => {\n    if (user.profile && user.profile.receivedLike && user.profile.likedProfile && user.profile.matched) {\n      console.log('USE EFFECT-->');\n      console.log('user.profile.matched-->', user.profile.matched);\n      setReceivedLikes(user.profile.receivedLike)\n      setLikedProfiles(user.profile.likedProfile)\n      setMatches(user.profile.matched)\n    }\n\n    getAllProfiles()\n      .then((list) => {\n        // console.log('list-->', list);\n\n        const filteredList = list.filter((el) => el.id !== user.id)\n        // console.log('filteredList-->', filteredList);\n        setProfiles(filteredList)\n        // filterProfilesToShowExceptSwipedOnes(user, list)\n        if (currentDirection.length && user.profile && user.profile.id) {\n          sendLikesToBackEnd(currentDirection, user.profile.id)\n        }\n      })\n  }, []);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseCity = () => setShowCityModal(false);\n  const handleShowCity = () => setShowCityModal(true);\n  const handleShowCategory = () => setShowCategoryModal(true);\n  const handleCloseCategory = () => setShowCategoryModal(false);\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>, cb: any) => {\n    cb(ev.target.value)\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n\n    if (user && user.profile) {\n      const newUs: User = {\n        ...user, profile: {\n          age: age !== \"\" ? age : user.profile.age,\n          categories: user.profile.categories,\n          cities: user.profile.cities,\n          description: description !== \"\" ? description : user.profile.description,\n          gender: gender !== \"\" ? gender : user.profile.gender,\n          hasNewMatch: user.profile.hasNewMatch,\n          id: user.profile.id,\n          likedProfile: user.profile.likedProfile,\n          location: location !== \"\" ? location : user.profile.location,\n          matched: user.profile.matched,\n          picture: picture !== \"\" ? picture : user.profile.picture,\n          receivedLike: user.profile.receivedLike,\n          userId: user.id,\n        }\n      }\n      dispatch(profileUpdate(newUs))\n    }\n  };\n\n  const firstLetterUpper = (str: string): string => {\n    const arr = str.split('')\n    arr[0] = arr[0].toUpperCase()\n    return arr.join('')\n  }\n\n  const handleCitySubmit = (e: FormEvent) => {\n    e.preventDefault()\n    if (user.profile && user.profile.id) {\n      const cityObj: CityAdd = {\n        profileId: user.profile.id,\n        name: firstLetterUpper(city)\n      }\n      dispatch(addCityToProfile(cityObj, user))\n    }\n  };\n\n  const handleCategorySubmit = (ev: any): any => {\n    // console.log('e.target.value-->', ev.target.value);\n    setCategory(ev.target.value)\n    const categoryToSend = {\n      profileId: user.profile && user.profile.id,\n      name: ev.target.value\n    }\n    // console.log('categoryToSend-->', categoryToSend);\n    dispatch(addCategoryToProfile(categoryToSend, user))\n  };\n\n  const filterSwipedProfiles = (profiles: ProfileNew[], currentDir: string[]): any => {\n\n    console.log('filterSwipedProfiles PROFILES FUNCTION-->');\n    console.log('profiles-->', profiles);\n    console.log('currentDir-->', currentDir);\n    // filter profiles according to selected city from user\n    const filteredByCity = filterByCity(profiles);\n    console.log('filteredByCity-->', filteredByCity);\n\n    // filter the above list based on selected activity from user\n    const filteredByCityAndActivity = filterByActivity(filteredByCity)\n    console.log('filteredByCityAndActivity-->', filteredByCityAndActivity);\n\n    // remove yourself from the list\n    if (filteredByCityAndActivity) {\n      const filteredByCityActivitySelf = filteredByCityAndActivity.filter((el: any) => el.id !== user.id)\n\n      // console.log('INSIDE FILTERBYCITY AND ACTIVITY-->');\n      // console.log('filteredByCityActivitySelf-->', filteredByCityActivitySelf);\n\n\n      let filteredByPreviousSwipes = [];\n\n      if (user.profile && user.profile.swipes && user.profile.swipes.length > 0) {\n        console.log('user.profile.swipes-->', user.profile.swipes);\n        console.log('user.profile.swipes.length-->', user.profile.swipes.length);\n        for (let a = 0; a < filteredByCityActivitySelf.length; a++) {\n          let flag;\n          for (let c = 0; c < user.profile.swipes.length; c++) {\n            if (Number(user.profile.swipes[c].swipeId) === filteredByCityActivitySelf[a].id) {\n              flag = true;\n              break;\n            }\n          }\n          if (!flag) {\n            filteredByPreviousSwipes.push(filteredByCityActivitySelf[a])\n          }\n          else {\n            flag = false;\n          }\n        }\n      } else {\n        filteredByPreviousSwipes = filteredByCityActivitySelf\n      }\n\n      console.log('filteredByPreviousSwipes-->', filteredByPreviousSwipes);\n\n      if (filteredByPreviousSwipes.length > 0 && (user.profile && user.profile.swipes && user.profile.swipes.length > 0 || currentDir.length > 0)) {\n        const result = [];\n        for (let i = 0; i < filteredByPreviousSwipes.length; i++) {\n          let flag;\n          for (let a = 0; a < currentDir.length; a++) {\n            if (Number(currentDir[a].match(/\\d+/g)) === filteredByPreviousSwipes[i].id) {\n              flag = true;\n              break;\n            }\n          }\n          if (!flag) {\n            result.push(filteredByPreviousSwipes[i]);\n          } else {\n            flag = false;\n          }\n        }\n        // console.log('filterSwipedProfiles result -->', result);\n        return result;\n\n      }\n      else {\n        // here i would have to add a check and compare it to send profiles that are not part of the matches already\n        //\n        const filteredByNotMatchedYet = [];\n        if (user && user.profile && user.profile.matched && filteredByCityAndActivity.length !== 0 && filteredByPreviousSwipes.length > 0) {\n          console.log('----------------> INSIDE IF USER HAS MATCHES');\n\n          for (let i = 0; i < filteredByCityAndActivity.length; i++) {\n            let flag;\n            for (let a = 0; a < user.profile.matched.length; a++) {\n              if (Number(user.profile.matched[a].id) === Number(filteredByCityAndActivity[i].id)) {\n                flag = true;\n                break;\n              }\n            }\n            if (!flag) {\n              filteredByNotMatchedYet.push(filteredByCityAndActivity[i])\n            } else {\n              flag = false;\n            }\n          }\n          console.log('filteredByNotMatchedYet-->', filteredByNotMatchedYet);\n          return filteredByNotMatchedYet;\n        } else {\n          console.log('filteredByPreviousSwipes-->', filteredByPreviousSwipes);\n          return filteredByPreviousSwipes\n        }\n      }\n    }\n  };\n\n  const filterByCity = (profiles: ProfileNew[]): any => {\n    // console.log('filterByCity-->');\n    // console.log('profiles-->', profiles);\n    // console.log('user-->', user);\n\n    // console.log('user.profile.cities-->', user.profile);\n    if (user && user.profile && user.profile.cities && user.profile.cities[0] && user.profile.cities[0].name) {\n      // console.log('profiles-->', profiles);\n      // console.log('profiles.cities-->', profiles.cities);\n      const res = profiles.filter((el) => {\n        // console.log('el-->', el);\n        if (user && user.profile && user.profile.cities && user.profile.cities[0].name && el && el.cities && el.cities.length > 0) {\n          if (el.cities && el.cities[0] && el.cities[0].name && user && user.profile && user.profile.cities && user.profile.cities[0]) {\n            return el.cities[0].name === user.profile.cities[0].name;\n          }\n          // console.log('el.cities[0].name-->', el.cities[0].name);\n          // console.log('el.cities[0].name === user.profile.ciities[0].name-->', el.cities[0].name === user.profile.cities[0].name);\n\n          // console.log('user.profile.cities[0].name-->', user.profile.cities[0].name);\n        }\n      })\n      // console.log('filterByCity res -->', res);\n      return res;\n    }\n  }\n\n  const filterByActivity = (profiles: ProfileNew[]): any => {\n    // console.log('filterByActivity-->',);\n    // console.log('profiles-->', profiles);\n    if (profiles) {\n      const res = profiles.filter((el) => {\n        if (user && user.profile && user.profile.categories && user.profile.categories.length > 0 && el.categories && el.categories.length > 0) {\n          // console.log('el.categories-->', el.categories);\n          // console.log('el.categories[el.categories.length - 1].name-->', el.categories[el.categories.length - 1].name);\n          // console.log('user.profile.categories[categories.length - 1].name-->', user.profile.categories[user.profile.categories.length - 1].name);\n          return el.categories[0].name === user.profile.categories[user.profile.categories.length - 1].name\n        }\n      })\n      // console.log('res from filter by activity-->', res);\n      return res;\n    }\n  }\n\n  const sendLikesToBackEnd = (currentDir: string[], profileId: number): void => {\n    // console.log('profile page inside sendlikestoback end-->');\n    // console.log('currentDir-->', currentDir);\n    // console.log('profileId-->', profileId);\n\n    currentDir.forEach((el) => {\n      // console.log('el profilePage.tsx, line 174 el: ', el);\n      if (String(el.match(/[^\\s]+/)) === 'right') {\n        dispatch(addLike({\n          profileId: profileId,\n          givenLikeId: el.match(/\\d+/g)\n        }))\n      }\n    })\n  }\n\n  const filterNotMatchedYet = (obj: any): any => {\n    // console.log('FILTERNOTMATCHED YET-->');\n    // console.log('obj-->', obj);\n\n    const filteredByNotMatchedYet = [];\n    if (user.profile && user.profile.matched && obj && obj.length > 0) {\n      for (let i = 0; i < obj.length; i++) {\n        let flag;\n        for (let a = 0; a < user.profile?.matched?.length; a++) {\n          if (Number(user.profile?.matched[a].id) === Number(obj[i].id)) {\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          filteredByNotMatchedYet.push(obj[i])\n        } else {\n          flag = false;\n        }\n      }\n    }\n    // console.log('filteredByNotMatchedYet-->', filteredByNotMatchedYet);\n    return filteredByNotMatchedYet;\n  }\n\n  return (\n\n    <div id=\"profile_body\">\n      {/* {console.log('likedProfiles-->', likedProfiles)} */}\n      {/* {console.log('user.profile-->', user.profile)} */}\n      {console.log('user.profile.matched-->', user && user.profile && user.profile.matched)}\n      {console.log('matches-->', matches)}\n      <div id=\"sidebar-swipes\">\n        <div id=\"sidebar-swipes-title\">Swipe by categories</div>\n        <div id=\"sidebar-swipes-category-list\">\n          {categories.map((el, i) => {\n            return <option onClick={(e) => { handleCategorySubmit(e) }} id=\"sidebar-swipe-element\" key={i} value={el}>{el}</option>\n          })\n          }\n        </div>\n      </div>\n\n      <div className=\"profile_page_content\">\n\n        <div className=\"profile_page_header_container\">\n\n          <div id=\"profile-infos-picture\">\n            {user && user.profile && user.profile.picture ? <div className=\"profile_page_image_container\">\n              <img className=\"profile_page_image\" src={user.profile?.picture} alt=\"profile\" />\n            </div> : <></>}\n\n            <div id=\"user-infos\">\n              <div className=\"user_first_name\">{user.firstName}</div>\n              <div id=\"user-age\">{user.profile && user.profile.age} years old</div>\n              <div id=\"selected-city\">{user && user.profile && user.profile.cities && user.profile.cities[0] && user.profile.cities[0].name}</div>\n              <Link to={{\n                pathname: '/chats',\n                state: {\n                  matches: user.profile && user.profile.matched\n                }\n              }}>\n                <Button id=\"chats-link-btn\">Chat Room</Button>\n              </Link>\n            </div>\n          </div>\n\n          <div id=\"top_right_corner_btn\">\n        \n            <Button variant=\"primary\" onClick={handleShow} className=\"profile_update-button\">Edit Profile</Button>\n            <Button variant=\"primary\" onClick={handleShowCity} className=\"city_add\">Pick a city</Button>\n          \n          </div>\n        </div>\n\n        <div id=\"profile-page-body\">\n\n          <div id=\"my-matches-area\">\n            <div id=\"my-matches-title\">My matches</div>\n            <div id=\"my-matches-list\">\n              {user?.profile?.matched?.map((el: any, i: any) => {\n                return (\n                  <div id=\"match-container\" key={i}>\n                    <img src={el.picture} id=\"match-img\" alt=\"profile pic\" />\n                    <div id=\"match-infos\">\n                      <div className=\"invitor-name\" >{el.user?.firstName}</div>\n                      <div className=\"invitor-city\" >{el.location}</div>\n                      <div id=\"match-description\">{el.description}</div>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n\n          <div id=\"invitations-grid-area\">\n            <div className=\"invitations-container\" id=\"invitations-sent\">\n              <div className=\"invitations-container-title\">You have invited them</div>\n              <div className=\"invitations-list\">\n                {user && user.profile && user.profile.likedProfile &&\n                  user.profile.likedProfile[0] && user.profile.likedProfile[0].user\n                  && filterNotMatchedYet(user.profile.likedProfile).map((el: any, i: any) => {\n                    // { console.log('RENDER FILTER NOT MATCHED YET-->') }\n                    return (\n                      <div id=\"invitor-area\" key={i}>\n                        <img className=\"invitor-img\" src={el.picture} />\n                        <div id=\"invitor-details\">\n                          <div className=\"invitor-name\" >{el.user?.firstName}</div>\n                          <div className=\"invitor-city\" >{el.location}</div>\n\n                          <button id=\"invitor-view-profile-btn\">View profile</button>\n                        </div>\n                      </div>\n                    )\n                  })}\n              </div>\n            </div>\n\n\n            <div className=\"invitations-container\" id=\"invitations-received\">\n              <div className=\"invitations-container-title\">They have invited you</div>\n              <div className=\"invitations-list\">\n                {\n                  user && user.profile && user.profile.receivedLike &&\n                  user.profile.receivedLike[0] && user.profile.receivedLike[0].user\n                  && filterNotMatchedYet(receivedLikes).map((el: any, i: any) => {\n                    return (\n                      <div id=\"invitor-area\" key={i}>\n                        <img className=\"invitor-img\" src={el.picture} />\n                        <div id=\"invitor-details\">\n                          <div className=\"invitor-name\" >{el.user?.firstName}</div>\n                          <div className=\"invitor-city\" >{el.location}</div>\n                          <button id=\"invitor-view-profile-btn\">View profile</button>\n                        </div>\n                        <div id=\"evaluate-invitation-btn\">\n                          <Button id=\"accept-invitation-btn\" onClick={(e) => {\n                            setReceivedLikes((prevList: any) => {\n                              return prevList.filter((element: any) => {\n                                return element.id !== el.id\n                              })\n                            })\n                            setMatches((prevList: any) => [...prevList, el])\n                            dispatch(setDirection([`right id:${el.id}`]))\n                            if (user && user.profile) {\n                              console.log('currentDirection-->', currentDirection);\n                              sendLikesToBackEnd([`right id:${el.id}`], Number(user.profile.id))\n                            }\n                          }}>√</Button>\n                          <Button id=\"reject-invitation-btn\">X</Button>\n                        </div>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal show={show} onHide={handleClose}>\n          <div id=\"modal-background\">\n            <div id=\"edit-profile-modal-form\">\n              <Modal.Header>\n                <Modal.Title id=\"edit-profile-title\">Edit Your Profile</Modal.Title>\n                <Modal.Body>\n\n                  <form id=\"edit-profile-input-list\">\n                    <input className=\"edit-profile-input-field\" name=\"picture\" id=\"\" placeholder=\"Picture\" onChange={(e) => {\n                      handleChange(e, setPicture)\n                    }}></input>\n                    <input className=\"edit-profile-input-field\" name=\"description\" id=\"\" placeholder=\"Description\" onChange={(e) => {\n                      handleChange(e, setDescription)\n                    }}></input>\n                    <input className=\"edit-profile-input-field\" name=\"age\" id=\"\" placeholder=\"Age\" onChange={(e) => {\n                      handleChange(e, setAge)\n                    }}></input>\n                    <input className=\"edit-profile-input-field\" name=\"gender\" id=\"\" placeholder=\"Gender\" onChange={(e) => {\n                      handleChange(e, setGender)\n                    }}></input>\n                    <input className=\"edit-profile-input-field\" name=\"location\" id=\"\" placeholder=\"Location\" onChange={(e) => {\n                      handleChange(e, setLocation)\n                    }}></input>\n                  </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n\n                  <Button id=\"edit-profile-submit-btn\" variant=\"primary\" onClick={(e) => {\n                    handleSubmit(e)\n                    handleClose()\n                  }}>\n                    Save Changes\n                  </Button>\n                  <div id=\"close-edit-profile-modal\" onClick={handleClose}>Close</div>\n                </Modal.Footer>\n              </Modal.Header>\n            </div>\n          </div>\n        </Modal>\n\n\n        {/* REUSED IDs FROM THE OTHER MODAL BELOW */}\n        {/* NEED CHANGE */}\n\n\n        <div>\n          <Modal show={showCityModal} onHide={handleCloseCity}>\n            <div id=\"modal-background\">\n              <div id=\"edit-profile-modal-form\">\n                <Modal.Header>\n                  <Modal.Title id=\"edit-profile-title\">Add your city</Modal.Title>\n                  <Modal.Body>\n                    <form id=\"edit-profile-input-list\">\n                      <input className=\"edit-profile-input-field\" name=\"city\" id=\"\" onChange={(e) => {\n                        handleChange(e, setCity)\n                      }}></input>\n                    </form>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button id=\"edit-profile-submit-btn\" variant=\"primary\" onClick={(e) => {\n                      handleCitySubmit(e)\n                      handleCloseCity()\n                    }}>\n                      Submit\n                    </Button>\n                    <div id=\"close-edit-profile-modal\" onClick={handleCloseCity}>Close</div>\n                  </Modal.Footer>\n                </Modal.Header>\n              </div>\n            </div>\n          </Modal>\n        </div>\n\n      </div>\n\n      {/* <div id=\"select-category-area\">\n      <select id=\"mySelect\" onChange={(e) => { handleCategorySubmit(e) }}>\n          {categories.map((el, i) => {\n            return <option key={i} value={el}>{el}</option>\n          })\n          }\n        </select>\n      </div> */}\n\n      {/* {console.log('user', user)} */}\n      {/* {user.profile && user.profile.swipes && console.log('user.profile.swipes-->', user.profile.swipes)} */}\n      {/* {console.log('currentDirection', currentDirection)} */}\n\n      {/* {user.profile && user.profile.id && currentDirection && currentDirection.length && sendLikesToBackEnd(currentDirection, user.profile.id)} */}\n\n      {/* <Link to={{\n        pathname: '/swiping',\n        state: {\n          profiles: filterSwipedProfiles(profiles, currentDirection),\n        }\n      }}>\n        <Button>Swiping</Button>\n      </Link> */}\n\n      {/* <Link to=\"/matches\">\n        <Button>Matches</Button>\n      </Link> */}\n\n      {console.log('user.profile-->', user.profile)}\n    \n\n    </div>\n  )\n}",[],"/Users/benjamin/CoVent/client/src/utils/firebase.ts",[],"/Users/benjamin/CoVent/client/src/index.tsx",["57"],"/Users/benjamin/CoVent/client/src/components/Swiping/swiping.tsx",["58","59","60","61","62","63","64","65","66","67"],"/Users/benjamin/CoVent/client/src/components/landingPage/landingPage.tsx",["68","69","70","71","72","73","74"],{"ruleId":"75","severity":1,"message":"76","line":13,"column":10,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":16,"column":28,"nodeType":"81","messageId":"82","endLine":16,"endColumn":33},{"ruleId":"75","severity":1,"message":"83","line":23,"column":9,"nodeType":"77","messageId":"78","endLine":23,"endColumn":21},{"ruleId":"75","severity":1,"message":"84","line":31,"column":9,"nodeType":"77","messageId":"78","endLine":31,"endColumn":34},{"ruleId":"75","severity":1,"message":"85","line":82,"column":10,"nodeType":"77","messageId":"78","endLine":82,"endColumn":18},{"ruleId":"75","severity":1,"message":"86","line":83,"column":10,"nodeType":"77","messageId":"78","endLine":83,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":85,"column":54,"nodeType":"89","messageId":"90","endLine":85,"endColumn":57,"suggestions":"91"},{"ruleId":"75","severity":1,"message":"92","line":86,"column":10,"nodeType":"77","messageId":"78","endLine":86,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":86,"column":54,"nodeType":"89","messageId":"90","endLine":86,"endColumn":57,"suggestions":"93"},{"ruleId":"87","severity":1,"message":"88","line":87,"column":42,"nodeType":"89","messageId":"90","endLine":87,"endColumn":45,"suggestions":"94"},{"ruleId":"75","severity":1,"message":"95","line":88,"column":10,"nodeType":"77","messageId":"78","endLine":88,"endColumn":18},{"ruleId":"75","severity":1,"message":"96","line":118,"column":9,"nodeType":"77","messageId":"78","endLine":118,"endColumn":27},{"ruleId":"75","severity":1,"message":"97","line":119,"column":9,"nodeType":"77","messageId":"78","endLine":119,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":121,"column":70,"nodeType":"89","messageId":"90","endLine":121,"endColumn":73,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"88","line":167,"column":37,"nodeType":"89","messageId":"90","endLine":167,"endColumn":40,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"88","line":167,"column":43,"nodeType":"89","messageId":"90","endLine":167,"endColumn":46,"suggestions":"100"},{"ruleId":"75","severity":1,"message":"101","line":178,"column":9,"nodeType":"77","messageId":"78","endLine":178,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":178,"column":80,"nodeType":"89","messageId":"90","endLine":178,"endColumn":83,"suggestions":"102"},{"ruleId":"87","severity":1,"message":"88","line":193,"column":80,"nodeType":"89","messageId":"90","endLine":193,"endColumn":83,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"88","line":276,"column":50,"nodeType":"89","messageId":"90","endLine":276,"endColumn":53,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"88","line":302,"column":54,"nodeType":"89","messageId":"90","endLine":302,"endColumn":57,"suggestions":"105"},{"ruleId":"87","severity":1,"message":"88","line":335,"column":37,"nodeType":"89","messageId":"90","endLine":335,"endColumn":40,"suggestions":"106"},{"ruleId":"87","severity":1,"message":"88","line":335,"column":43,"nodeType":"89","messageId":"90","endLine":335,"endColumn":46,"suggestions":"107"},{"ruleId":"87","severity":1,"message":"88","line":414,"column":49,"nodeType":"89","messageId":"90","endLine":414,"endColumn":52,"suggestions":"108"},{"ruleId":"87","severity":1,"message":"88","line":414,"column":57,"nodeType":"89","messageId":"90","endLine":414,"endColumn":60,"suggestions":"109"},{"ruleId":"87","severity":1,"message":"88","line":435,"column":78,"nodeType":"89","messageId":"90","endLine":435,"endColumn":81,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"88","line":435,"column":86,"nodeType":"89","messageId":"90","endLine":435,"endColumn":89,"suggestions":"111"},{"ruleId":"87","severity":1,"message":"88","line":459,"column":66,"nodeType":"89","messageId":"90","endLine":459,"endColumn":69,"suggestions":"112"},{"ruleId":"87","severity":1,"message":"88","line":459,"column":74,"nodeType":"89","messageId":"90","endLine":459,"endColumn":77,"suggestions":"113"},{"ruleId":"75","severity":1,"message":"114","line":469,"column":72,"nodeType":"77","messageId":"78","endLine":469,"endColumn":73},{"ruleId":"87","severity":1,"message":"88","line":470,"column":57,"nodeType":"89","messageId":"90","endLine":470,"endColumn":60,"suggestions":"115"},{"ruleId":"87","severity":1,"message":"88","line":471,"column":64,"nodeType":"89","messageId":"90","endLine":471,"endColumn":67,"suggestions":"116"},{"ruleId":"87","severity":1,"message":"88","line":475,"column":51,"nodeType":"89","messageId":"90","endLine":475,"endColumn":54,"suggestions":"117"},{"ruleId":"75","severity":1,"message":"118","line":6,"column":27,"nodeType":"77","messageId":"78","endLine":6,"endColumn":33},{"ruleId":"75","severity":1,"message":"119","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"120","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"121","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":20},{"ruleId":"75","severity":1,"message":"122","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":24},{"ruleId":"79","severity":1,"message":"123","line":11,"column":25,"nodeType":"77","messageId":"124","endLine":11,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":11,"column":31,"nodeType":"89","messageId":"90","endLine":11,"endColumn":34,"suggestions":"125"},{"ruleId":"87","severity":1,"message":"88","line":11,"column":37,"nodeType":"89","messageId":"90","endLine":11,"endColumn":40,"suggestions":"126"},{"ruleId":"75","severity":1,"message":"127","line":15,"column":9,"nodeType":"77","messageId":"78","endLine":15,"endColumn":20},{"ruleId":"75","severity":1,"message":"128","line":16,"column":9,"nodeType":"77","messageId":"78","endLine":16,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":25,"column":40,"nodeType":"89","messageId":"90","endLine":25,"endColumn":43,"suggestions":"129"},{"ruleId":"75","severity":1,"message":"130","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"131","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":21},{"ruleId":"75","severity":1,"message":"132","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":29},{"ruleId":"75","severity":1,"message":"133","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":32},{"ruleId":"75","severity":1,"message":"134","line":13,"column":18,"nodeType":"77","messageId":"78","endLine":13,"endColumn":23},{"ruleId":"75","severity":1,"message":"135","line":15,"column":22,"nodeType":"77","messageId":"78","endLine":15,"endColumn":29},{"ruleId":"75","severity":1,"message":"136","line":21,"column":9,"nodeType":"77","messageId":"78","endLine":21,"endColumn":21},"@typescript-eslint/no-unused-vars","'setUser' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'initialState' is assigned a value but never used.","'initialStateCity' is assigned a value but never used.","'category' is assigned a value but never used.","'showCategoryModal' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["137","138"],"'likedProfiles' is assigned a value but never used.",["139","140"],["141","142"],"'profiles' is assigned a value but never used.","'handleShowCategory' is assigned a value but never used.","'handleCloseCategory' is assigned a value but never used.",["143","144"],["145","146"],["147","148"],"'filterSwipedProfiles' is assigned a value but never used.",["149","150"],["151","152"],["153","154"],["155","156"],["157","158"],["159","160"],["161","162"],["163","164"],["165","166"],["167","168"],["169","170"],["171","172"],"'e' is defined but never used.",["173","174"],["175","176"],["177","178"],"'Router' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ProfileNew' is defined but never used.","'getAllProfiles' is defined but never used.","Argument 'prop' should be typed with a non-any type.","anyTypedArg",["179","180"],["181","182"],"'currentUser' is assigned a value but never used.","'currentDirection' is assigned a value but never used.",["183","184"],"'setUserName' is defined but never used.","'ProfilePage' is defined but never used.","'getUserByIdDispatch' is defined but never used.","'registerUserToDataBase' is defined but never used.","'Modal' is defined but never used.","'CityAdd' is defined but never used.","'firebaseUser' is assigned a value but never used.",{"messageId":"185","fix":"186","desc":"187"},{"messageId":"188","fix":"189","desc":"190"},{"messageId":"185","fix":"191","desc":"187"},{"messageId":"188","fix":"192","desc":"190"},{"messageId":"185","fix":"193","desc":"187"},{"messageId":"188","fix":"194","desc":"190"},{"messageId":"185","fix":"195","desc":"187"},{"messageId":"188","fix":"196","desc":"190"},{"messageId":"185","fix":"197","desc":"187"},{"messageId":"188","fix":"198","desc":"190"},{"messageId":"185","fix":"199","desc":"187"},{"messageId":"188","fix":"200","desc":"190"},{"messageId":"185","fix":"201","desc":"187"},{"messageId":"188","fix":"202","desc":"190"},{"messageId":"185","fix":"203","desc":"187"},{"messageId":"188","fix":"204","desc":"190"},{"messageId":"185","fix":"205","desc":"187"},{"messageId":"188","fix":"206","desc":"190"},{"messageId":"185","fix":"207","desc":"187"},{"messageId":"188","fix":"208","desc":"190"},{"messageId":"185","fix":"209","desc":"187"},{"messageId":"188","fix":"210","desc":"190"},{"messageId":"185","fix":"211","desc":"187"},{"messageId":"188","fix":"212","desc":"190"},{"messageId":"185","fix":"213","desc":"187"},{"messageId":"188","fix":"214","desc":"190"},{"messageId":"185","fix":"215","desc":"187"},{"messageId":"188","fix":"216","desc":"190"},{"messageId":"185","fix":"217","desc":"187"},{"messageId":"188","fix":"218","desc":"190"},{"messageId":"185","fix":"219","desc":"187"},{"messageId":"188","fix":"220","desc":"190"},{"messageId":"185","fix":"221","desc":"187"},{"messageId":"188","fix":"222","desc":"190"},{"messageId":"185","fix":"223","desc":"187"},{"messageId":"188","fix":"224","desc":"190"},{"messageId":"185","fix":"225","desc":"187"},{"messageId":"188","fix":"226","desc":"190"},{"messageId":"185","fix":"227","desc":"187"},{"messageId":"188","fix":"228","desc":"190"},{"messageId":"185","fix":"229","desc":"187"},{"messageId":"188","fix":"230","desc":"190"},{"messageId":"185","fix":"231","desc":"187"},{"messageId":"188","fix":"232","desc":"190"},{"messageId":"185","fix":"233","desc":"187"},{"messageId":"188","fix":"234","desc":"190"},{"messageId":"185","fix":"235","desc":"187"},{"messageId":"188","fix":"236","desc":"190"},"suggestUnknown",{"range":"237","text":"238"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"237","text":"239"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"240","text":"238"},{"range":"240","text":"239"},{"range":"241","text":"238"},{"range":"241","text":"239"},{"range":"242","text":"238"},{"range":"242","text":"239"},{"range":"243","text":"238"},{"range":"243","text":"239"},{"range":"244","text":"238"},{"range":"244","text":"239"},{"range":"245","text":"238"},{"range":"245","text":"239"},{"range":"246","text":"238"},{"range":"246","text":"239"},{"range":"247","text":"238"},{"range":"247","text":"239"},{"range":"248","text":"238"},{"range":"248","text":"239"},{"range":"249","text":"238"},{"range":"249","text":"239"},{"range":"250","text":"238"},{"range":"250","text":"239"},{"range":"251","text":"238"},{"range":"251","text":"239"},{"range":"252","text":"238"},{"range":"252","text":"239"},{"range":"253","text":"238"},{"range":"253","text":"239"},{"range":"254","text":"238"},{"range":"254","text":"239"},{"range":"255","text":"238"},{"range":"255","text":"239"},{"range":"256","text":"238"},{"range":"256","text":"239"},{"range":"257","text":"238"},{"range":"257","text":"239"},{"range":"258","text":"238"},{"range":"258","text":"239"},{"range":"259","text":"238"},{"range":"259","text":"239"},{"range":"260","text":"238"},{"range":"260","text":"239"},{"range":"261","text":"238"},{"range":"261","text":"239"},{"range":"262","text":"238"},{"range":"262","text":"239"},[2328,2331],"unknown","never",[2391,2394],[2442,2445],[3762,3765],[5170,5173],[5176,5179],[5588,5591],[6281,6284],[9369,9372],[10658,10661],[12077,12080],[12083,12086],[15031,15034],[15039,15042],[16083,16086],[16091,16094],[17229,17232],[17237,17240],[17926,17929],[17999,18002],[18183,18186],[468,471],[474,477],[958,961]]